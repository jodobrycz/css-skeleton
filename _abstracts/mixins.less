/**
	responsive helpers
		use .tablet({ your styles for 768+})
**/
.phone(@rules) { @media (min-width: @screen-xs) { @rules(); } }
.tablet(@rules) { @media (min-width: @screen-sm) { @rules(); } }
.desktop(@rules) { @media (min-width: @screen-md) { @rules(); } }
.lg-desktop(@rules) { @media (min-width: @screen-lg) { @rules(); } }

.screen-xs(@rules) { @media (min-width: @screen-xs) { @rules(); } }
.screen-sm(@rules) { @media (min-width: @screen-sm) { @rules(); } }
.screen-md(@rules) { @media (min-width: @screen-md) { @rules(); } }
.screen-lg(@rules) { @media (min-width: @screen-lg) { @rules(); } }

/**
	attach an opacity to any color (especially from @variable), after calling this mixin, use @resultAlphaColor as a result:
	{
	 	.alphaColor(@text-color, 0.2);
		color: @resultAlphaColor;
	}
**/
.alphaColor(@color, @alpha) {
	@resultAlphaColor:  rgba(red(@color), green(@color), blue(@color), @alpha);;
}

/**
	cross browser simple linear gradient
**/
.linearGradient (@type, @from, @to) {
	background: @from;
	background: -moz-linear-gradient(@type, @from 0%, @to 100%); /* FF3.6+ */
	background: -webkit-linear-gradient(@type, @from 0%, @to 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(@type, @from 0%, @to 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(@type, @from 0%, @to 100%); /* IE10+ */
	background: linear-gradient(@type, @from 0%, @to 100%); /* W3C */
}

.transform(@value) {
	-ms-transform: @value;
	-moz-transform: @value;
	-webkit-transform: @value;
	transform: @value;
}

.translateY(@value) {
	-ms-transform: translateY(@value);
	-moz-transform: translateY(@value);
	-webkit-transform: translateY(@value);
	transform: translateY(@value);
}

.translateX(@value) {
	-ms-transform: translateX(@value);
	-moz-transform: translateX(@value);
	-webkit-transform: translateX(@value);
	transform: translateX(@value);
}

.translateZ(@value) {
	-webkit-transform: translateZ(@value);
	-ms-transform: translateZ(@value);
	-moz-transform: translateZ(@value);
	transform: translateZ(@value);
}

.translate(@valueX, @valueY) {
	-webkit-transform: translate(@valueX, @valueY);
	-ms-transform: translate(@valueX, @valueY);
	-moz-transform: translate(@valueX, @valueY);
	transform: translate(@valueX, @valueY);
}

.transition(@type, @duration, @delay, @easing) {
	-webkit-transition: @type @duration @delay @easing;
	-moz-transition: @type @duration @delay @easing;
	-ms-transition: @type @duration @delay @easing;
	transition: @type @duration @delay @easing;
}

.scale(@value) {
	-webkit-transform: scale(@value);
	-ms-transform: scale(@value);
	-moz-transform: scale(@value);
	transform: scale(@value);
}

.rotate(@value) {
	-webkit-transform: rotate(@value);
	-moz-transform: rotate(@value);
	-ms-transform: rotate(@value);
	transform: rotate(@value);
}

.translateYAndRotate(@valueTranslate, @valueRotate) {
	-webkit-transform: translateY(@valueTranslate) rotate(@valueRotate);
	-moz-transform: translateY(@valueTranslate) rotate(@valueRotate);
	-ms-transform: translateY(@valueTranslate) rotate(@valueRotate);
	transform: translateY(@valueTranslate) rotate(@valueRotate);
}

/* clean list */
.cleanList() {
	//list-style: none;
	margin-bottom: 0;

	/*
	li {
		//margin: 0;
		padding-left: 0;

		&:before {
			display: none;
		}
	}
	*/
}

.clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}


.responsiveImage() {
	display: block;
	height: auto;
	max-width: 100%;
	vertical-align: middle; /* Remove the gap between <img> elements and the bottom of their */
	width: auto;
}

.flexCenter() {
	.display-flex();
	.align-items(center);
	.justify-content(center);
}

.displayFlexWrap() {
	.display-flex();
	.flex-wrap(wrap);
}

.gridUnit(@unit) {
	@resultGritUnit: @gridUnit * @unit;
}

.boxShadow() {
	//box-shadow: inset .2rem .2rem .8rem 0 @color-ee, inset 0 0 13px 0 rgba(145,145,145,0.1);
	box-shadow: inset .2rem .2rem .8rem 0 @color-ee;
}

.textShadow() {
	//text-shadow: 0 .1rem 1rem 0 rgba(0,0,0,.23);
	text-shadow: 0 .1rem 1rem rgba(0,0,0,.23);
}

.menuBurgerLine {
	background: @burger-line;
	display: inline-block;
	height: .2rem;
	width: 2.8rem;
}

.overflowContainer() {
	margin: auto;
	max-width: @max-container-width;
	position: relative;
	width: 100%;
}

/* svg */
.svgIconFill (@fill: @color-white, @width: 5rem, @height: 5rem) {
	fill: @fill;
	fill-rule: evenodd;
	height: @height;
	stroke: @fill;
	stroke-width: 0;
	transition: fill @animation-speed ease;
	width: @width;
}

.svgIconStroke (@stroke: @color-white, @width: 5rem, @height: 5rem) {
	fill: none;
	fill-rule: evenodd;
	height: @height;
	stroke: @stroke;
	stroke-linecap: round;
	stroke-linejoin: round;
	width: @width;
}

/* CSS3 content columns */
.contentColumns(@columnCount; @columnGap: @grid-gutter-width) {
	-webkit-column-count: @columnCount;
	-moz-column-count: @columnCount;
	column-count: @columnCount;
	-webkit-column-gap: @columnGap;
	-moz-column-gap: @columnGap;
	column-gap: @columnGap;
}

/* separator */
.separator (@top: 5rem; @bottom: 5rem;) {
	//background: url(/img/dots.svg) 50% 50% no-repeat;
	background: url('/img/dots.svg') 50% 50% no-repeat;
	background-size: contain;
	content: "";
	display: block;
	height: 5rem;
	margin-bottom: @bottom;
	margin-top: @top;
}

.separator__line (@top: 8rem, @bottom: 8rem) {
	background-color: @gray-lighter;
	display: block;
	height: .2rem;
	margin: @top 0 @bottom 0;
	width: 100%;
}

/* calculator type number */
.calc-input-type-number {
	background-color: @brand-primary;
	cursor: pointer;
	display: inline-block;
	font-size: 3.2rem;
	font-weight: 700;
	height: 3.5rem;
	line-height: 1;
	position: absolute;
	text-align: center;
	bottom: 0.65rem;
	width: 3.5rem;
	z-index: 1;
}


.horizontalScrollContainer() {
	&::-webkit-scrollbar {
		-webkit-appearance: none;
		height: .8rem;
	}

	&::-webkit-scrollbar-thumb {
		background-color: rgba(0, 0, 0, 0.3);
		border-radius: .4rem;
	}
}
