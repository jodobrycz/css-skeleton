/**
 * Only display content to screen readers
 * See: http://a11yproject.com/posts/how-to-hide-content/
 */
.sr-only {
	@include visually-hidden();
}

/**
 * Visually hidden techniques allow for content to be hidden from sighted users while still allowing ATs to discover
   and interact with the content.
 * The :not portions of the selector are allowing a means for any focusable element to become visible when focused/active
   by a user. So elements that normally canâ€™t receive focus, like paragraphs, will not become visible if a user navigates
   through content via screen reader controls or the Tab key, but natively focusable elements, or elements with a non-negative
   tabindex will have these elements appear in the DOM on focus.
 */
.visually-hidden:not(:focus):not(:active) {
	@include visually-hidden();
}

.skip {
	margin: 0;
	padding: 0;

	a {
		background: $color-white;
		border: .1rem dotted $text-color;
		left: -10000em;
		padding: 1rem 2rem;
		position: absolute;
		text-decoration: underline;
		z-index: 0;

		&:focus,
		&:active {
			left: 0;
			outline: 0;
			outline: none;
			z-index: 100;
		}
	}
}

.left {
	text-align: left;
}

.center {
	text-align: center;
}

.right {
	text-align: right;
}

.nowrap {
	white-space: nowrap;
}

.overflow-visible {
	overflow: visible;
}


.break {
	display: block;
}

.display-block {
	display: block;
}

.inline {
	display: inline;
}

.print {
  display: none;
}


.fl, .pull-left {
	float: left;
}

.fr, .pull-right {
	float: right;
}

/**
 * Always hide an element with the `hidden` HTML attribute (from PureCSS).
 * Needed for proper display in IE 10-.
 */
[hidden] {
	display: none !important;
}

:focus:not(:focus-visible) {
	outline: none;
}

/**
 * Aspect ratios for media objects i.e canvas, iframe, video, svg etc.
*/
.aspect-ratio {
	height: 0;
	position: relative;
	width: 100%;

	> * {
		height: 100%;
		left: 0;
		margin-top: 0;
		position: absolute;
		top: 0;
		width: 100%;
	}
}

$aspect-ratio: (
		'1-1': 1 /1,
		'2-1': 1 / 2,
		'3-2': 2 / 3,
		'4-3': 3 / 4,
		'16-9': 9 / 16,
		'16-10': 10 / 16
);

@each $name, $ar in $aspect-ratio {
	.aspect-ratio--#{$name} {
		padding-bottom: percentage($ar);
	}
}
